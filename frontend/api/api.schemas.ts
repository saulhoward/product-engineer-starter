/**
 * Generated by orval v6.30.2 üç∫
 * Do not edit manually.
 * FastAPI
 * OpenAPI spec version: 0.1.0
 */
export type ValidationErrorLocItem = string | number;

export interface ValidationError {
  loc: ValidationErrorLocItem[];
  msg: string;
  type: string;
}

export type Status = typeof Status[keyof typeof Status];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Status = {
  unknown: 'unknown',
  submitted: 'submitted',
  processing: 'processing',
  completed: 'completed',
} as const;

export interface Option {
  key: string;
  selected: boolean;
  text: string;
}

export interface HTTPValidationError {
  detail?: ValidationError[];
}

export interface Evidence {
  content: string;
  event_datetime: string;
  page_number: number;
  pdf_name: string;
}

export interface Step {
  decision: string;
  evidence: Evidence[];
  is_final: boolean;
  is_met: boolean;
  key: string;
  next_step: string;
  options: Option[];
  question: string;
  reasoning: string;
}

export type CaseSummary = string | null;

export interface Case {
  case_id: number;
  cpt_codes: string[];
  created_at: string;
  is_complete: boolean;
  is_met: boolean;
  procedure_name: string;
  status: Status;
  steps: Step[];
  summary: CaseSummary;
}

